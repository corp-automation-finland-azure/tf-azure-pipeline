parameters:
  terraformRemoteStateFile: "$(admin.azureDevOpsProject)-$(ENVIRONMENT).tfstate"

jobs:
  - job: Plan
    displayName: "Terraform Plan"
    pool: "az-pipeline-terraform-agent-pool"
    steps:
      - checkout: peab-pipeline
        clean: true
        persistCredentials: true
      - task: AzureCLI@2
        displayName: Set Terraform backend
        inputs:
          azureSubscription: $(admin.azureConnection)
          scriptType: bash
          scriptPath: scripts/initialize-terraform-backend.sh
          addSpnToEnvironment: true
        env:
          resourceGroup: $(terraform.resourceGroup)
          storageAccount: $(terraform.storageAccount)
          location: $(terraform.backendLocation)
          remoteStateFile: ${{ parameters.terraformRemoteStateFile }}
          storageContainer: $(terraform.storageAccountContainer)

      - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
        displayName: Install Terraform
        inputs:
          terraformVersion: $(terraform.version)
      - task: Bash@3
        displayName: "Clone es main"
        inputs:
          filePath: scripts/clone-repo.sh
        env:
          gitToken: $(git.token)
          targetGitOrganization: $(admin.azureDevOpsOrganization)
          targetDir: $(terraform.path)
          cloneUrl: $(settings.cloneSourceTerraformCode)

      - task: AzureCLI@2
        displayName: "Setup Authentication"
        inputs:
          azureSubscription: $(admin.azureEnvironmentConnection)
          scriptType: bash
          addSpnToEnvironment: true
          failOnStandardError: "true"
          scriptPath: scripts/set-variables.sh
        env:
          terraformBackendStorageAccount: $(terraform.storageAccount)
          gitToken: $(git.token)
      - task: Bash@3
        displayName: "Terraform Plan"
        inputs:
          workingDirectory: $(terraform.path)
          filePath: scripts/terraform-init.sh
        env:
          terraformBackendStorageAccount: $(terraform.storageAccount)
          terraformBackendStorageContainer: $(terraform.storageAccountContainer)
          terraformRemoteStateFile: ${{ parameters.terraformRemoteStateFile }}
          terraformBackendResourceGroup: $(terraform.resourceGroup)
          ARM_SUBSCRIPTION_ID: $ARM_SUBSCRIPTION_ID
          ARM_TENANT_ID: $ARM_TENANT_ID
          ARM_CLIENT_ID: $ARM_CLIENT_ID
          ARM_CLIENT_SECRET: $ARM_CLIENT_SECRET
          terraformShowFlag: "False"
      - script: |
          echo "Compressing $(terraform.path) directory..."
          tar -czf ${{ parameters.terraformRemoteStateFile }}.tar.gz -C $(terraform.path) .
        displayName: "Compress $(terraform.path) Artifact"
      - publish: ${{ parameters.terraformRemoteStateFile }}.tar.gz
        artifact: "tfplan"
